# musl-cross-make meta makefile

# built to support (at least) these architectures:
#  aarch64-linux-musl
#  arm-linux-musleabihf
#  x86_64-linux-musl

# prereqs:
#  bash (gnu)
#  bzip2 (busybox should be fine)
#  curl (with ssl/tls support)
#  gcc/g++
#  make (gnu)
#  tar (busybox should be fine)
#  wget (with ssl/tls support)

# projects:
#  musl-cross-make: https://github.com/richfelker/musl-cross-make
#  crosware: https://github.com/ryanwoodsmall/crosware

# example usage with bash fd substitution:
#  git clone https://github.com/richfelker/musl-cross-make.git
#  cd musl-cross-make
#  make -f <(curl -kLs https://raw.githubusercontent.com/ryanwoodsmall/musl-misc/master/musl-cross-make-confs/Makefile.arch_indep)

# stages:
#  clean everything up
#  generate configs
#  copy in shared config.mak
#  build normal "shared" compiler with system compiler
#  install shared compiler
#  clean again
#  copy in static config.mak
#  build static compiler
#  install static compiler
#  create static compiler symlinks
#  archive and compress static compiler

# XXX - error on unset var example
#       ifndef TEST_VAR
#       $(error TEST_VAR not set)
#       endif

# basic stuff: shell, timestamp and architecture
SHELL        := /bin/bash
TS            = $(shell date '+%Y%m%d%H%M%S')
ARCH          = $(shell uname -m | sed 's/^\(arm\).*/\1/g')

# form our triplet, arm needs to be hardware float
TRIPLET_BASE  = $(ARCH)-linux-musl
TRIPLET       =
ifeq ($(ARCH),arm)
	TRIPLET=$(TRIPLET_BASE)eabihf
else
	TRIPLET=$(TRIPLET_BASE)
endif

# build out paths to expand into
TMPSHAREDDIR  = $(PWD)/shared-build
CWTOP         = /usr/local/crosware
MUSLTOP       = $(CWTOP)/software/static-toolchain
CWTCPREFIX    = $(TS)-
CWSTATICINST  = $(MUSLTOP)/$(CWTCPREFIX)$(TRIPLET)

# our final archive will be dumped to /tmp
CWSTATICDIR   = $(shell basename $(CWSTATICINST))
CWSTATICTAR   = /tmp/$(CWSTATICDIR).tar
CWSTATICBZ2   = $(CWSTATICTAR).bz2

# and add our temp shared build to our path
EXPATH        = $(TMPSHAREDDIR)/bin
PATH         := $(PATH):$(EXPATH)
export PATH

# musl-cross-make stuff
CONFMAK       = config.mak
CONFMAKDIST   = $(CONFMAK).dist

.PHONY: all prereqs build_shared build_static cleanconfs create_symlinks archive_compiler

all: prereqs cleanconfs config.mak.common config.mak.shared config.mak.static build_shared build_static create_symlinks archive_compiler

# clean up configs everytime we run
cleanconfs:
	echo 'cleaning configs'
	rm -f $(CONFMAK).common $(CONFMAK).shared $(CONFMAK).static

# building on alpine in a miniroot, we may not have everything
# we need to check we're not using busybox wget too - no ssl by default
prereqs:
	echo 'checking prerequisites'
	which bzip2
	bash --version | egrep -qi '^GNU bash'
	curl --version | egrep -qi '(tls|ssl)'
	gcc  --version | egrep -qi '^gcc'
	g++  --version | egrep -qi '^g\+\+'
	make --version | egrep -qi '^GNU Make'
	wget --version | egrep -qi '(tls|ssl)'
	echo
	echo 'attempting to make directory $(MUSLTOP)'
	echo 'if this fails, make sure you can write to $(MUSLTOP) or its parent directory'
	mkdir -p $(MUSLTOP) 
	echo
	echo 'if this fails, make sure you are running in a musl-cross-make git checkout'
	test -e $(CONFMAKDIST)
	echo

# $(CONFMAK) common toolchain options
$(CONFMAK).common: cleanconfs
	echo 'creating $@'
	echo -n > $@
	echo 'TARGET = $(TRIPLET)' >> $@
	echo 'COMMON_CONFIG += CFLAGS="-g0 -Os" CXXFLAGS="-g0 -Os"' >> $@
	echo 'COMMON_CONFIG += --disable-nls' >> $@
	echo 'GCC_CONFIG += --enable-languages=c,c++' >> $@
	echo 'GCC_CONFIG += --disable-multilib' >> $@

# temporary shared toolchain build config
$(CONFMAK).shared: $(CONFMAK).common
	echo 'creating $@'
	cat $< > $@
	echo 'COMMON_CONFIG += LDFLAGS="-s"' >> $@
	echo 'OUTPUT = $(TMPSHAREDDIR)' >> $@

# final static toolchain build config
$(CONFMAK).static: $(CONFMAK).common
	echo 'creating $@'
	cat $< > $@
	echo 'COMMON_CONFIG += --enable-shared=no --disable-shared --enable-static=yes --enable-static' >> $@
	echo 'COMMON_CONFIG += LDFLAGS="-s --static"' >> $@
	echo 'COMMON_CONFIG += CC="$(TRIPLET)-gcc -static --static" CXX="$(TRIPLET)-g++ -static --static"' >> $@
	echo 'OUTPUT = $(CWSTATICINST)' >> $@
	echo 'GCC_CONFIG += --disable-host-shared' >> $@

# build and install temporary shared toolchain
build_shared: $(CONFMAK).shared
	echo 'building temporary shared compiler'
	cat $< > $(CONFMAK)
	make clean || echo -n
	make
	make install
	make clean

# build and install final static toolchain
build_static: $(CONFMAK).static build_shared
	echo 'building final static compiler'
	cat $< > $(CONFMAK)
	make clean || echo -n
	make
	make install
	make clean

# create triplet-program symlinks to bare program
create_symlinks: build_static
	echo 'creating symbolic links'
	cd $(CWSTATICINST)/bin
	for p in `ls * | grep $(TRIPLET) | sed s/$(TRIPLET)-//g` ; do ln -sf $(TRIPLET)-$$p $$p ; done
	# or:
	#  $(foreach p,$(shell ls $(TRIPLET)* | sed s/$(TRIPLET)-//g),ln -sf $(TRIPLET)-$p $p;)
	cd -

# final tar and compress
archive_compiler: create_symlinks
	echo 'archiving static compiler'
	cd $(MUSLTOP)
	tar -cf $(CWSTATICTAR) $(CWSTATICDIR)
	cd -
	bzip2 -9 $(CWSTATICTAR)
	echo
	echo 'static compiler archived to $(CWSTATICBZ2)'
	echo
